DEPURACION Y REORDENAMIENTO DE DEPOSITOS(ALMACENES).

CORRECCION DE:

MODELOS         CODUBIC 010, EXISTEN=SASERI X CODPROD Y SAPROD Y SAEXIS
VEHICULOS      CODUBIC 020, EXISTEN=0 : SAPROD Y SAEXIS
REPUESTOS ACTIVOS   CODPROD 001, EXISTEN= SUM (DEPOSITOS) SAPROD, SAEXIS

TODOS LOS REGISTROS SAPROD: EXISTENCIA=0,  CUANDO EXISTENCIA<0 EN SAPROD Y SAEXIS

REPUESTOS OBSOLETOS  
ARTICULOS INACTIVOS 

ENCERES  000






    SE UNIFICAN EXISTEN SEGUN SUMA DE TODOS LOS DEPOSITOS SE ACTUALIZA SAPROD




0--------------------0-------------------------0--------------------------0------------------------0--------------------0------------------------0-----------------------0

QUERYS NECESARIOS PARA EVALUAR 

-- 1S SELECCIONA EN SAPROD PRODUCTOS CLASIFICADOS COMO MODELO CON INCONSISTENCIA EN EL CODIGO
-- SIRVE PARA REVISAR GENERALMENTE EL RESULTADO SON VEHICULOS

SELECT     X.CodProd, X.CodUbic, X.PuestoI, X.Existen, X.ExUnidad, X.CantPed, X.UnidPed, X.CantCom, X.UnidCom, Y.Descrip, Y.CodInst, 
                      Y.Existen AS Expr1
FROM         SAEXIS AS X INNER JOIN
                      SAPROD AS Y ON X.CodProd = Y.CodProd
WHERE     (Y.CodInst = '11') AND (Y.CodProd NOT LIKE '%-%')


-- 2S SELECCIONA REGISTROS DE SAPROD CLASIFICADOS COMO MODELO APARENTEMENTE BIEN ESCRITOS EN UBICACIONES DIFERENTES A 010 - MODELOS PARA LA VENTA

SELECT    *
FROM         SAEXIS AS X INNER JOIN
                      SAPROD AS Y ON X.CodProd = Y.CodProd
WHERE     (Y.CodInst = '11') AND (Y.CodProd LIKE '%-%')


-- 4S REVISA EXISTEN DE SAPROD PARA REGISTROS DE MODELO

SELECT     X.CodProd, X.Descrip, X.CodInst, X.Existen, Y.CodProd AS Expr1, Y.CodUbic, Y.PuestoI, Y.Existen AS Expr2, Y.ExUnidad AS Expr3, Y.CantPed, 
                      Y.UnidPed, Y.CantCom, Y.UnidCom
FROM         SAPROD AS X LEFT OUTER JOIN
                      SAEXIS AS Y ON X.CodProd = Y.CodProd
WHERE     (X.CodInst = '11')


-- 5S REVISA UBICACION DE SAPROD PARA REGISTROS DE VEHICULOS

SELECT     X.CodProd, X.Descrip, X.CodInst, X.Existen, Y.CodProd AS Expr1, Y.CodUbic, Y.PuestoI, Y.Existen AS Expr2, Y.ExUnidad AS Expr3, Y.CantPed, 
                      Y.UnidPed, Y.CantCom, Y.UnidCom
FROM         SAPROD AS X LEFT OUTER JOIN
                      SAEXIS AS Y ON X.CodProd = Y.CodProd
WHERE     (X.CodInst = '12') AND (Y.CodUbic <> '020')


-- 6S REVISA SI ALGUN REPUESTO ESTA UBICADO EN MODELO 
SELECT     X.CodProd, X.Descrip, X.Existen, X.CodInst, X.Existen AS Expr2, Y.Existen AS Expr1, Y.CodUbic
FROM         SAPROD AS X INNER JOIN
                      SAEXIS AS Y ON X.CodProd = Y.CodProd
WHERE     (X.CodInst <> '12') AND (X.CodInst <> '11') AND (Y.CodUbic = '010') 

0--------------------0-------------------------0--------------------------0------------------------0--------------------0------------------------0-----------------------0
QUERYS NECESARIOS EJECUTAR PARA CORREGIR  INSTANCIAS, DEPOSITOS Y EXISTENCIAS EN INVENTARIOS


-- 1U CORRIGE INSTANCIA A VEHCULOS DE PRESUNTOS REGISTROS DE MODELOS MAL UBICADOS

UPDATE    SAPROD
SET              CodInst = '12', Existen = 0
FROM         SAEXIS AS X INNER JOIN
                      SAPROD ON X.CodProd = SAPROD.CodProd
WHERE     (SAPROD.CodInst = '11') AND (SAPROD.CodProd NOT LIKE '%-%')


-- 2D ELIMINA REGISTROS DE SAEXIS DE MODELOS CON UBICACIONES DISTITAS A 010 -MODELOS PARA LA VENTA

DELETE FROM SAEXIS
FROM         SAEXIS INNER JOIN
                      SAPROD AS Y ON SAEXIS.CodProd = Y.CodProd
WHERE     (Y.CodInst = '11') AND (Y.CodProd LIKE '%-%') AND (SAEXIS.CodUbic <> '010')


-- 3U ACTUALIZA EXISTENCIA EN SAPROD Y SAEXIS SEGUN SASERI 
--  ATENCION PREVIO A ESTO SE DEBE ASEGURAR QUE TODOS LOS SASERI POSEEN UBICACION 010
-- EN ALGUNOS CONCESIONARIOS SE MARCARON UBICACION CON 999 A LOS DESINCORPORADOS NO COMERCIALES -- (BARROSO)


DECLARE @CODPROD VARCHAR(25)
DECLARE @SIGUIENTE VARCHAR(25)
DECLARE @ACTUAL VARCHAR(25)
DECLARE @EXISTEN INT
 
DECLARE MIREG CURSOR FOR
	SELECT   X.CODPROD
                   
	FROM         SASERI AS X RIGHT OUTER JOIN
                      SAEXIS ON X.CodProd = SAEXIS.CodProd
	WHERE     (X.CodUbic = '010') ORDER BY X.CODPROD
       
      OPEN MIREG
      FETCH NEXT FROM MIREG INTO @CODPROD
      WHILE (@@FETCH_STATUS = 0) 
      BEGIN
          
            SELECT @EXISTEN=SUM(EXISTEN) FROM SAEXIS WHERE CODPROD=@CODPROD
            UPDATE SAPROD SET Existen = @EXISTEN WHERE CODPROD=@CODPROD
            UPDATE SAEXIS SET Existen = @EXISTEN WHERE CODPROD=@CODPROD 
            PRINT @CODPROD
            
            FETCH NEXT FROM MIREG INTO @CODPROD
      END
      CLOSE MIREG
      DEALLOCATE MIREG


-- 4U ACTUALIZA SAPROD REGISTROS DE MODELOS NO AFECTADOS POR EL QUERY ANTERIOR

UPDATE    SAPROD
SET              Existen = Y.Existen
FROM         SAPROD LEFT OUTER JOIN
                      SAEXIS AS Y ON SAPROD.CodProd = Y.CodProd
WHERE     (SAPROD.CodInst = '11') AND (Y.Existen IS NOT NULL)


-- 5U ELIMINA DE SAEXIS REGISTROS DE VEHICULOS QUE NO ESTEN EN UBICACION  020

DELETE FROM SAEXIS
FROM         SAPROD AS X LEFT OUTER JOIN
                      SAEXIS ON X.CodProd = SAEXIS.CodProd
WHERE     (X.CodInst = '12') AND (SAEXIS.CodUbic <> '020')

-- ACTUALIZA EXISTEN EN 0 A SAPROD A REGISTROS DE VEHICULOS

UPDATE    SAPROD
SET              Existen = 0
FROM         SAPROD LEFT OUTER JOIN
                      SAEXIS AS Y ON SAPROD.CodProd = Y.CodProd
WHERE     (SAPROD.CodInst = '12')


-- ACTUALIZA SAPROD CON LA EXISTENCIA DE SAEXIS DE REGISTROS DE REPUESTOS (TODOS)

UPDATE    SAPROD
SET              Existen = Y.Existen
FROM         SAPROD INNER JOIN
                      SAEXIS AS Y ON SAPROD.CodProd = Y.CodProd
WHERE     (SAPROD.CodInst <> '11') AND (SAPROD.CodInst <> '12')

 
-- QUERY CORRIGE EN SAEXIS Y EN SAPROD LOS REGISTROS DE REPUESTOS
-- QUE TIENEN MAS DE UN DPOSITO ACTIVO LA EXISTENCIA EM SAPROD Y SAEXIS DEPOSITO PPAL
-- Y LOS DEPOSITOS DISTINTOS A LOS DE REPUESTOS, LOS ELIMINA.
-- SI SOLO SE QUIERE REVISAR SE COLOCAL -- DE COMENARIOS ANTES DE UPDATE Y DELETED
-- LA DEBILIDAD DE ESTE QUERY ES QUE PUEDE ACTUALIZAR EN SAEXIS DEPOSITO PPAL LA EXISTENCIA DE UN PRODUCTO
-- CUYA EXISTENCIA SEAN LA SUMA DE UNO O MAS DEPOSITOS DE REPUESTOS
-- SE RESUELVE ANIDANDO OTRO CURSOR  


DECLARE @CODPROD VARCHAR(25)
DECLARE @SIGUIENTE VARCHAR(25)
DECLARE @ACTUAL VARCHAR(25)
DECLARE @EXISTEN INT
  
DECLARE MIREG CURSOR FOR
      SELECT X.CODPROD
         FROM SAEXIS X INNER JOIN SAPROD Y ON X.CODPROD=Y.CODPROD 
         WHERE CODINST<>'12' AND CODINST<>'11' ORDER BY X.CODPROD
         OPEN MIREG
      FETCH NEXT FROM MIREG INTO @CODPROD
      WHILE (@@FETCH_STATUS = 0) 
      BEGIN
         SET @SIGUIENTE=@ACTUAL
         SET @ACTUAL=@CODPROD
         IF @ACTUAL=@SIGUIENTE
          BEGIN
            SELECT @EXISTEN=SUM(EXISTEN) FROM SAEXIS WHERE CODPROD=@ACTUAL 
            UPDATE SAPROD SET Existen = @EXISTEN WHERE CODPROD=@ACTUAL 
            IF NOT EXISTS (SELECT * FROM SAEXIS WHERE CodProd=@CODPROD AND CodUbic='001') 
             BEGIN
             INSERT SAEXIS (CodProd, CodUbic, Existen, ExUnidad, CantPed, UnidPed, CantCom, UnidCom)
             VALUES (@CODPROD, '001', 0, 0,0,0,0,0)
             END
            UPDATE SAEXIS SET EXISTEN = @EXISTEN WHERE CODPROD=@ACTUAL AND CodUbic='001' -- OJO SOLO CUANDO NO ESTA EN USO CORRECTO LOS DEMAS DEPOSITOS
            DELETE FROM SAEXIS WHERE CodProd=@CODPROD AND CodUbic<>'001' AND CODUBIC<>'002'AND CODUBIC<>'003' AND CODUBIC<>'004' AND CODUBIC<>'005'  
            PRINT @aCTUAL
            PRINT @EXISTEN 
           END  
            FETCH NEXT FROM MIREG INTO @CODPROD
      END
      CLOSE MIREG
      DEALLOCATE MIREG


-- ACTUALIZA SAEXIS CON DEPOSITO PPAL A REGISTROS DE REPUESTOS MAL UBICADOS EN 020
UPDATE    SAEXIS
SET              CodUbic = '001'
FROM         SAEXIS INNER JOIN
                      SAPROD AS Y ON SAEXIS.CodProd = Y.CodProd
WHERE     (SAEXIS.CodUbic = '020') AND (Y.CodInst <> '11') AND (Y.CodInst <> '12') AND (Y.CodInst <> '28')



-- IDEN AL ANTERIOR PERO MAL UBICADOS EN 010
UPDATE    SAEXIS
SET              CodUbic = '001'
FROM         SAEXIS INNER JOIN
                      SAPROD AS Y ON SAEXIS.CodProd = Y.CodProd
WHERE     (SAEXIS.CodUbic = '010') AND (Y.CodInst <> '11') AND (Y.CodInst <> '12') AND (Y.CodInst <> '28')


 -- SE EXPLICAN POR SI MISMO
 UPDATE    SAPROD
SET              Existen = 0
WHERE     (Existen < 0)

UPDATE    SAEXIS
SET              Existen = 0
WHERE     (Existen < 0)







